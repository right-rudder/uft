---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import { KEYWORDS } from "../consts";
import CTAColor from "../components/CTAColor.astro";
import flyWithUsCTA from "../data/flyWithUsCTA";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  author,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  keywords,
} = Astro.props;
---

<BaseLayout
  siteTitle={title + " | Blog | Right Rudder Marketing"}
  siteDescription={description + " Right Rudder Marketing Blog."}
  keywords={category + ", " + tags.join(", ") + keywords ? keywords : KEYWORDS}
>
  <div class="h-20 lg:h-28 w-full bg-primary-950/80"></div>

  <section
    class="flex justify-center pt-2 bg-gradient-to-b from-primary-50 to-primary-100"
  >
    <article class="mx-auto max-w-4xl">
      <div
        class="mb-12 lg:mb-0 aspect-square lg:aspect-video lg:rounded-t-md shadow-md overflow-hidden"
      >
        {
          heroImage && (
            <img
              class="object-cover h-full w-full bg-white"
              src={heroImage}
              alt={title}
            />
          )
        }
      </div>
      <div class="mx-auto max-w-4xl bg-white prose font-sans pt-12 pb-32 px-5">
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="text-5xl m-0 font-sans">{title}</h1>
          <p class="text-sm font-light">Published by:</p>
          <p class="-mt-5 text-base font-medium">{author}</p>
          <div class="md:flex gap-2 hidden">
            <span
              class="bg-primary-600 text-white inline-block px-3 py-1 rounded-md"
            >
              {category}
            </span>
            {
              tags.map((tag, index) => (
                <span
                  class={`bg-teal-500 text-white inline-block px-3 py-1 rounded-md`}
                >
                  {tag}
                </span>
              ))
            }
          </div>
          <hr />
        </div>
        <div class="flex relative justify-center">
          <slot />
        </div>
      </div>
    </article>
  </section>
  <CTAColor content={flyWithUsCTA} />
</BaseLayout>
